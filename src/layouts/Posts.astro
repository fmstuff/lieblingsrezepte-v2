---
import { Image } from "astro:assets";
import config from "@config/config.json";
import dateFormat from "@lib/utils/dateFormat";
import { humanize, slugify } from "@lib/utils/textConverter";
import { BiCalendarEdit, BiCategoryAlt } from "react-icons/bi/index.js";

const base_path = config.site.base_path;
const { summary_length } = config.settings;
const { className, posts, fluid } = Astro.props;
---

<div
  class={`row gy-5 gx-4 ${className} ${
    posts.length == 1 ? "justify-center" : ""
  } `}
>
  {
    posts.map((post: any, i: number) => (
      <div class={i === 0 && fluid != false ? "col-12" : "col-12 sm:col-6"}>
        {post.data.image && (
          <a
            href={`${base_path}/${post.slug}`}
            class="group block overflow-hidden rounded-lg hover:text-primary"
          >
            <Image
              class={`${
                i === 0 ? "h-96" : "h-64"
              } w-full object-cover transition duration-300 group-hover:scale-[1.03]`}
              src={`${base_path}/${post.data.image}`}
              alt={post.data.title}
              width={i === 0 ? 925 : 445}
              height={i === 0 ? 475 : 230}
            />
          </a>
        )}
        <ul class="mb-4 mt-6 flex flex-wrap items-center text-text">
          <li class="mr-5 flex flex-wrap items-center font-medium">
            <BiCalendarEdit className="mr-1 h-5 w-5 text-gray-600" />
            <>{dateFormat(post.data.date)}</>
          </li>
          <li class="mr-5 flex flex-wrap items-center">
            <BiCategoryAlt className="mr-1 h-[18px] w-[18px] text-gray-600" />
            <>
              <ul>
                {post.data.categories.map((category: string, i: number) => (
                  <li class="inline-block">
                    <a
                      href={`${base_path}/categories/${slugify(category)}`}
                      class="mr-2 font-medium hover:text-primary"
                    >
                      {humanize(category)}
                      {i !== post.data.categories.length - 1 && ","}
                    </a>
                  </li>
                ))}
              </ul>
            </>
          </li>
        </ul>
        <h3 class="mb-4">
          <a
            href={`${base_path}/${post.slug}`}
            class="block transition duration-300 hover:text-primary"
          >
            {post.data.title}
          </a>
        </h3>
        <p class="text-text">
          {(post.data.description ?? post.body)?.slice(
            0,
            Number(
              i === 0 && fluid != false ? summary_length * 2 : summary_length
            )
          )}
          ...
        </p>
      </div>
    ))
  }
</div>
